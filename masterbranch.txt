param(
    [Parameter(Mandatory=$true, Position=0)]
    [string]$configFile
)

function IsExcludedFolder($folderPath, $excludeFolders) {
    foreach ($pattern in $excludeFolders) {
        if ($folderPath -like "*$pattern*") {
            return $true
        }
    }
    return $false
}

[xml]$config = Get-Content $configFile

foreach ($folderConfig in $config.HousekeepingConfig.FolderConfig) {
    $path = $folderConfig.Path
    $enabled = $folderConfig.Enabled -eq "true"
    $retentionPeriod = [int]$folderConfig.RetentionPeriodInDays
    $excludeFolders = $folderConfig.ExcludeFolders.FolderPattern | Select-Object -ExpandProperty Text
    $includeSubfolders = $folderConfig.IncludeSubfolders -eq "true"

    if ($enabled) {
        Write-Host "Processing folder: $path"

        $searchPath = $includeSubfolders ? $path : "$path/*"

        $oldFiles = Get-ChildItem -Path $searchPath -Recurse -File -Force | Where-Object {
            $_.LastWriteTime -lt (Get-Date).AddDays(-$retentionPeriod) -and -not (IsExcludedFolder $_.DirectoryName, $excludeFolders)
        }

        if ($oldFiles) {
            Write-Host "Deleting old files in $path:"
            $oldFiles | Format-Table -AutoSize
            $oldFiles | Remove-Item -Force
        } else {
            Write-Host "No old files found in $path."
        }
    } else {
        Write-Host "Housekeeping disabled for folder: $path"
    }
}
