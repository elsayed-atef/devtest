# Function to convert string to boolean safely
function ConvertTo-Bool($value) {
    return [System.Convert]::ToBoolean($value, [System.Globalization.CultureInfo]::InvariantCulture)
}

# Enhanced logging function
function Log {
    param (
        [string]$message
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logEntry = "$timestamp - $message"
    Add-Content -Path $logFilePath -Value $logEntry
}

# Read and parse the XML
$config = [xml](Get-Content "config.xml")

# Log raw XML values
Log "Raw DryRun Value: $($config.HousekeepingConfig.Settings.DryRun)"
Log "Raw Archive.Enabled Value: $($config.HousekeepingConfig.Paths.Path.Archive.Enabled)"
Log "Raw PeakHours.Enabled Value: $($config.HousekeepingConfig.Settings.PeakHours.Enabled)"

# Parse boolean flags
$dryRun = ConvertTo-Bool $config.HousekeepingConfig.Settings.DryRun
$archiveEnabled = ConvertTo-Bool $config.HousekeepingConfig.Paths.Path.Archive.Enabled
$peakHoursEnabled = ConvertTo-Bool $config.HousekeepingConfig.Settings.PeakHours.Enabled

# Log parsed values
Log "Parsed DryRun Value: $dryRun"
Log "Parsed Archive.Enabled Value: $archiveEnabled"
Log "Parsed PeakHours.Enabled Value: $peakHoursEnabled"

# Use the flags in the script
if ($dryRun) {
    Log "DryRun is enabled. No changes will be made."
} else {
    Log "DryRun is disabled. Changes will be made."
}

if ($archiveEnabled) {
    Log "Archiving is enabled."
} else {
    Log "Archiving is disabled."
}

if ($peakHoursEnabled) {
    Log "Peak hours are enabled."
} else {
    Log "Peak hours are disabled."
}
