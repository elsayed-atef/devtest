function Test-ExcludePattern {
    param (
        [string[]]$Patterns,  # List of patterns to exclude
        [string]$Path          # Full file path to test
    )

    # Check if Patterns is an array and Path is a non-empty string
    if (-not $Patterns -or -not $Path) {
        throw "Patterns and Path parameters are required."
    }

    # Ensure patterns are trimmed and cleaned
    $cleanPatterns = $Patterns | ForEach-Object { $_.Trim() }
    
    # Iterate over each pattern and check for a match
    foreach ($pattern in $cleanPatterns) {
        if ($Path -like "*$pattern*") {
            return $true
        }
    }
    
    return $false
}

# Example usage:
$patterns = @("important", "2.00.00")
$path1 = "C:\temp\logs\important\cas\se.cs"
$path2 = "C:\temp\logs\1.00.00\kep\kep.kep"
$path3 = "C:\temp\logs\2.00.00\inner\dwl.del"

$test1 = Test-ExcludePattern -Patterns $patterns -Path $path1
$test2 = Test-ExcludePattern -Patterns $patterns -Path $path2
$test3 = Test-ExcludePattern -Patterns $patterns -Path $path3

Write-Output "Test 1: $test1"  # Should output True
Write-Output "Test 2: $test2"  # Should output False
Write-Output "Test 3: $test3"  # Should output True
